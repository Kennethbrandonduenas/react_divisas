import React, {useState,useEffect} from 'react'

//estilos
import './lineal.css'

const Lineal = (props) => {
    const [objeto, setObjeto] = useState(props.objeto);
    
    const cordenadasy=[
        {total:0,cordenadaY:350},
        {total:1000,cordenadaY:315},
        {total:3000,cordenadaY:280},
        {total:5000,cordenadaY:245},
        {total:10000,cordenadaY:210},
        {total:20000,cordenadaY:175},
        {total:30000,cordenadaY:140},
        {total:40000,cordenadaY:105},
        {total:50000,cordenadaY:70},
        {total:75000,cordenadaY:35},
        {total:100000,cordenadaY:1},
    ]

    const cordenadasX=[71,153,235,317,399,481,563,645,726,808,890,972,1054,1136]

    useEffect(() => {
        setObjeto(props.objeto)
      }, [props]);



      const getCordenadasY=(cantidad)=>{
        var bandera=true
        var index2=0
        var cory=0
        while(bandera){
            if(cantidad>=cordenadasy[index2].total && cantidad<=cordenadasy[index2+1].total){
                bandera=false
            }
            else{
                index2++
            }

        }

        if(cantidad===cordenadasy[index2].total){
            cory=cordenadasy[index2].cordenadaY
        }
        else if(cantidad===cordenadasy[index2+1].total){
            cory=cordenadasy[index2+1].cordenadaY
        }
        else{
            cory= cordenadasy[index2+1].cordenadaY+ ((cordenadasy[index2].cordenadaY-cordenadasy[index2+1].cordenadaY)/2)
        }

        return cory

      }

    return (
        <div className="linealGrafic-container" >

            <div class="linealGrafic-g">
                <svg width="100%" className="svg-lineal" viewBox="0 0 1188 394" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g id="graficoLineal 1" clip-path="url(#clipgl)">
                    <path id="Vector" d="M125 0H43V356H125V0Z" fill="white"/>
                    <path id="Vector_2" d="M207 0H125V356H207V0Z" fill="white"/>
                    <path id="Vector_3" d="M289 0H207V356H289V0Z" fill="white"/>
                    <path id="Vector_4" d="M371 0H289V356H371V0Z" fill="white"/>
                    <path id="Vector_5" d="M453 0H371V356H453V0Z" fill="white"/>
                    <path id="Vector_6" d="M535 0H453V356H535V0Z" fill="white"/>
                    <path id="Vector_7" d="M617 0H535V356H617V0Z" fill="white"/>
                    <path id="Vector_8" d="M699 0H617V356H699V0Z" fill="white"/>
                    <path id="Vector_9" d="M781 0H699V356H781V0Z" fill="white"/>
                    <path id="Vector_10" d="M863 0H781V356H863V0Z" fill="white"/>
                    <path id="Vector_11" d="M945 0H863V356H945V0Z" fill="white"/>
                    <path id="Vector_12" d="M1027 0H945V356H1027V0Z" fill="#F2F2F2"/>
                    <path id="Vector_13" d="M1109 0H1027V356H1109V0Z" fill="#F2F2F2"/>
                    <path id="Vector_14" d="M1191 0H1109V356H1191V0Z" fill="#F2F2F2"/>
                    <path id="Vector_15" d="M43 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_16" d="M125 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_17" d="M207 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_18" d="M289 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_19" d="M371 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_20" d="M453 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_21" d="M535 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_22" d="M617 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_23" d="M699 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_24" d="M781 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_25" d="M863 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_26" d="M945 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_27" d="M1027 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_28" d="M1109 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_29" d="M1187.5 356V0" stroke="#E0E0E0"/>
                    <path id="Vector_30" d="M44 355.5H1188" stroke="#E0E0E0"/>

                    
                    {
                        objeto.map((x,index)=>{
                            if(x.data.length===0){
                                return 
                            }
                            var opcion=""
                            var accion=""

                            
                            for (let index = 0; index < x.data.length; index++) {
                                var cory=0
                                opcion= index===0 ? "M" : "L"
                                
                                cory=getCordenadasY(x.data[index].total)

                                if(index===11){
                                    accion= accion + opcion +" " + 945+" " + cory +" "
                                    break
                                }
                                else{
                                    accion= accion + opcion +" " + cordenadasX[index]+" " + cory +" "
                                }
                            }


                            var dotACtion=""
                            var dotOpcion=""
                            for (let index3 = 11; index3 < x.data.length; index3++) {
                                
                                dotOpcion= index3===11 ?"M" :"L"
                                var cory= getCordenadasY(x.data[index3].total)

                                if(index3===11){
                                    dotACtion= dotACtion + dotOpcion +" " + "945"+" " + cory +" "+"L"+ cordenadasX[index3]+" " + cory +" "
                                    
                                }
                                else{
                                    dotACtion= dotACtion + dotOpcion +" " + cordenadasX[index3]+" " + cory +" "
                                }

                                
                            }


                            if(index===0){
                                return  <g key={index}>
                                <path  d={accion} stroke={props.var1==="activo" ? x.color :"transparent"} stroke-width="3"/>
                                <path id="Vector_33" d={dotACtion} stroke={props.var1==="activo" ? x.color :"transparent"} stroke-width="3" stroke-dasharray="10 10"/>
                            </g>
                            }
                            else if(index===1){
                                return  <g key={index}>
                                <path  d={accion} stroke={props.var2==="activo" ? x.color :"transparent"} stroke-width="3"/>
                                <path id="Vector_33" d={dotACtion} stroke={props.var2==="activo" ? x.color :"transparent"} stroke-width="3" stroke-dasharray="10 10"/>
                                </g>
                            }
                            else{
                                return  <g key={index}>
                                <path  d={accion} stroke={props.var3==="activo" ? x.color :"transparent"} stroke-width="3"/>
                                <path id="Vector_33" d={dotACtion} stroke={props.var3==="activo" ? x.color :"transparent"} stroke-width="3" stroke-dasharray="10 10"/>
                            </g>
                            }
                            
                        })
                    }





                    <path id="Vector_35" d="M4.08789 9.11719H3.13867V3.01169C3.13867 2.50389 3.15429 2.02344 3.18554 1.57031C3.10351 1.65235 3.01172 1.73828 2.91015 1.82813C2.80859 1.91797 2.34375 2.29879 1.51562 2.97069L1 2.30269L3.26758 0.55078H4.08789V9.11719ZM13.0293 4.82229C13.0293 6.30269 12.795 7.40819 12.3262 8.13869C11.8614 8.86919 11.1485 9.23439 10.1875 9.23439C9.26562 9.23439 8.56445 8.86129 8.08398 8.11519C7.60351 7.36519 7.36328 6.26759 7.36328 4.82229C7.36328 3.33009 7.5957 2.22269 8.06054 1.5C8.52539 0.77735 9.23437 0.41602 10.1875 0.41602C11.1172 0.41602 11.8223 0.79297 12.3028 1.54688C12.7871 2.30079 13.0293 3.39259 13.0293 4.82229ZM8.34765 4.82229C8.34765 6.06839 8.49414 6.97659 8.78711 7.54689C9.08008 8.11329 9.54687 8.39649 10.1875 8.39649C10.836 8.39649 11.3047 8.10939 11.5938 7.53519C11.8868 6.95699 12.0332 6.05269 12.0332 4.82229C12.0332 3.59179 11.8868 2.69139 11.5938 2.12109C11.3047 1.54688 10.836 1.25977 10.1875 1.25977C9.54687 1.25977 9.08008 1.54297 8.78711 2.10938C8.49414 2.67189 8.34765 3.57619 8.34765 4.82229ZM19.8965 4.82229C19.8965 6.30269 19.6621 7.40819 19.1934 8.13869C18.7286 8.86919 18.0157 9.23439 17.0547 9.23439C16.1328 9.23439 15.4317 8.86129 14.9512 8.11519C14.4707 7.36519 14.2305 6.26759 14.2305 4.82229C14.2305 3.33009 14.4629 2.22269 14.9278 1.5C15.3926 0.77735 16.1016 0.41602 17.0547 0.41602C17.9844 0.41602 18.6895 0.79297 19.17 1.54688C19.6543 2.30079 19.8965 3.39259 19.8965 4.82229ZM15.2149 4.82229C15.2149 6.06839 15.3614 6.97659 15.6543 7.54689C15.9473 8.11329 16.4141 8.39649 17.0547 8.39649C17.7032 8.39649 18.1719 8.10939 18.461 7.53519C18.7539 6.95699 18.9004 6.05269 18.9004 4.82229C18.9004 3.59179 18.7539 2.69139 18.461 2.12109C18.1719 1.54688 17.7032 1.25977 17.0547 1.25977C16.4141 1.25977 15.9473 1.54297 15.6543 2.10938C15.3614 2.67189 15.2149 3.57619 15.2149 4.82229ZM22.4922 5.83009C22.6602 5.59179 22.9161 5.27929 23.2598 4.89259L25.334 2.69529H26.4883L23.8868 5.43169L26.67 9.11719H25.4922L23.2246 6.08199L22.4922 6.71489V9.11719H21.5313V0H22.4922V4.83399C22.4922 5.04879 22.4766 5.38089 22.4454 5.83009H22.4922Z" fill="#333333"/>
                    <path id="Vector_36" d="M8.11914 44.1172L11.6699 36.4473H7V35.5508H12.7011V36.3301L9.19727 44.1172H8.11914ZM16.58 38.8848C17.4824 38.8848 18.1915 39.1094 18.7071 39.5586C19.2266 40.0039 19.4863 40.6152 19.4863 41.3926C19.4863 42.2793 19.2031 42.9746 18.6367 43.4785C18.0742 43.9824 17.2968 44.2344 16.3046 44.2344C15.3398 44.2344 14.6035 44.0801 14.0957 43.7715V42.834C14.3691 43.0098 14.7089 43.1484 15.1152 43.25C15.5215 43.3477 15.9219 43.3965 16.3165 43.3965C17.004 43.3965 17.5372 43.2344 17.916 42.9102C18.2989 42.586 18.4902 42.1172 18.4902 41.5039C18.4902 40.3086 17.7578 39.711 16.2929 39.711C15.9218 39.711 15.4258 39.7676 14.8047 39.8809L14.3007 39.5586L14.623 35.5508H18.8829V36.4473H15.4551L15.2382 39.0195C15.6875 38.9297 16.1347 38.8848 16.58 38.8848ZM22.1758 40.8301C22.3438 40.5918 22.5996 40.2793 22.9433 39.8926L25.0175 37.6953H26.1719L23.5704 40.4317L26.3535 44.1172H25.1758L22.9083 41.082L22.1758 41.7149V44.1172H21.2148V35H22.1758V39.834C22.1758 40.0488 22.1602 40.3809 22.129 40.8301H22.1758Z" fill="#333333"/>
                    <path id="Vector_37" d="M9.48437 73.8848C10.3867 73.8848 11.0957 74.1094 11.6113 74.5586C12.1308 75.0039 12.3906 75.6152 12.3906 76.3926C12.3906 77.2793 12.1074 77.9746 11.541 78.4785C10.9785 78.9824 10.2011 79.2344 9.20898 79.2344C8.24414 79.2344 7.50781 79.0801 7 78.7715V77.834C7.27343 78.0098 7.61328 78.1484 8.01953 78.25C8.42578 78.3477 8.82617 78.3965 9.2207 78.3965C9.90823 78.3965 10.4414 78.2344 10.8203 77.9102C11.2031 77.586 11.3945 77.1172 11.3945 76.5039C11.3945 75.3086 10.6621 74.711 9.19726 74.711C8.82617 74.711 8.33007 74.7676 7.70898 74.8809L7.20507 74.5586L7.52734 70.5508H11.7871V71.4473H8.35937L8.14257 74.0195C8.59179 73.9297 9.03906 73.8848 9.48437 73.8848ZM19.3515 74.8223C19.3515 76.3027 19.1172 77.4082 18.6484 78.1387C18.1836 78.8692 17.4707 79.2344 16.5097 79.2344C15.5879 79.2344 14.8867 78.8613 14.4062 78.1152C13.9257 77.3652 13.6855 76.2676 13.6855 74.8223C13.6855 73.3301 13.9179 72.2227 14.3828 71.5C14.8476 70.7774 15.5566 70.416 16.5097 70.416C17.4394 70.416 18.1445 70.793 18.625 71.5469C19.1093 72.3008 19.3515 73.3926 19.3515 74.8223ZM14.6699 74.8223C14.6699 76.0684 14.8164 76.9766 15.1093 77.5469C15.4023 78.1133 15.8691 78.3965 16.5097 78.3965C17.1582 78.3965 17.6269 78.1094 17.916 77.5352C18.209 76.957 18.3554 76.0527 18.3554 74.8223C18.3554 73.5918 18.209 72.6914 17.916 72.1211C17.6269 71.5469 17.1582 71.2598 16.5097 71.2598C15.8691 71.2598 15.4023 71.543 15.1093 72.1094C14.8164 72.6719 14.6699 73.5762 14.6699 74.8223ZM21.9472 75.8301C22.1152 75.5918 22.3711 75.2793 22.7148 74.8926L24.789 72.6953H25.9433L23.3418 75.4317L26.125 79.1172H24.9472L22.6797 76.082L21.9472 76.7149V79.1172H20.9863V70H21.9472V74.834C21.9472 75.0488 21.9316 75.3809 21.9004 75.8301H21.9472Z" fill="#333333"/>
                    <path id="Vector_38" d="M12.3692 112.148H11.0977V114.117H10.166V112.148H6V111.299L10.0664 105.504H11.0977V111.263H12.3692V112.148ZM10.166 111.263V108.416C10.166 107.857 10.1856 107.226 10.2246 106.523H10.1778C9.99028 106.898 9.81448 107.209 9.65038 107.455L6.97266 111.263H10.166ZM18.8789 109.822C18.8789 111.303 18.6446 112.408 18.1758 113.138C17.711 113.869 16.9981 114.234 16.0371 114.234C15.1153 114.234 14.4141 113.861 13.9336 113.115C13.4531 112.365 13.2129 111.267 13.2129 109.822C13.2129 108.33 13.4453 107.222 13.9102 106.5C14.375 105.777 15.084 105.416 16.0371 105.416C16.9668 105.416 17.6719 105.793 18.1524 106.547C18.6367 107.301 18.8789 108.392 18.8789 109.822ZM14.1973 109.822C14.1973 111.068 14.3438 111.976 14.6367 112.547C14.9297 113.113 15.3965 113.396 16.0371 113.396C16.6856 113.396 17.1543 113.109 17.4434 112.535C17.7364 111.957 17.8828 111.053 17.8828 109.822C17.8828 108.592 17.7364 107.691 17.4434 107.121C17.1543 106.547 16.6856 106.26 16.0371 106.26C15.3965 106.26 14.9297 106.543 14.6367 107.109C14.3438 107.672 14.1973 108.576 14.1973 109.822ZM21.4746 110.83C21.6426 110.592 21.8985 110.279 22.2422 109.892L24.3164 107.695H25.4707L22.8692 110.431L25.6524 114.117H24.4746L22.2071 111.082L21.4746 111.715V114.117H20.5137V105H21.4746V109.834C21.4746 110.049 21.459 110.381 21.4278 110.83H21.4746Z" fill="#333333"/>
                    <path id="Vector_39" d="M12.3438 142.566C12.3438 143.113 12.1894 143.56 11.8808 143.908C11.5761 144.256 11.1426 144.488 10.5801 144.605V144.652C11.2676 144.738 11.7774 144.957 12.1094 145.308C12.4415 145.66 12.6074 146.121 12.6074 146.691C12.6074 147.508 12.3242 148.137 11.7578 148.578C11.1914 149.015 10.3867 149.234 9.34375 149.234C8.89063 149.234 8.47461 149.199 8.0957 149.129C7.7207 149.062 7.35547 148.943 7 148.771V147.846C7.37109 148.029 7.76563 148.17 8.18359 148.267C8.60547 148.361 9.00391 148.408 9.37891 148.408C10.8594 148.408 11.5997 147.828 11.5997 146.668C11.5997 145.629 10.7832 145.109 9.15039 145.109H8.30664V144.271H9.16211C9.83008 144.271 10.3594 144.125 10.75 143.832C11.1407 143.535 11.3359 143.125 11.3359 142.601C11.3359 142.183 11.1915 141.855 10.9024 141.617C10.6172 141.379 10.2285 141.26 9.73633 141.26C9.36133 141.26 9.00781 141.31 8.67578 141.412C8.34375 141.513 7.96484 141.701 7.53906 141.974L7.04687 141.318C7.39844 141.041 7.80273 140.824 8.25977 140.668C8.7207 140.508 9.20508 140.428 9.71289 140.428C10.5449 140.428 11.1915 140.619 11.6524 141.002C12.1133 141.381 12.3438 141.902 12.3438 142.566ZM19.58 144.822C19.58 146.303 19.3457 147.408 18.8769 148.138C18.4121 148.869 17.6993 149.234 16.7383 149.234C15.8165 149.234 15.1153 148.861 14.6348 148.115C14.1543 147.365 13.9141 146.267 13.9141 144.822C13.9141 143.33 14.1465 142.222 14.6114 141.5C15.0761 140.777 15.7852 140.416 16.7383 140.416C17.668 140.416 18.373 140.793 18.8535 141.547C19.3378 142.301 19.58 143.392 19.58 144.822ZM14.8984 144.822C14.8984 146.068 15.0449 146.976 15.3378 147.547C15.6308 148.113 16.0977 148.396 16.7383 148.396C17.3868 148.396 17.8555 148.109 18.1446 147.535C18.4376 146.957 18.584 146.053 18.584 144.822C18.584 143.592 18.4376 142.691 18.1446 142.121C17.8555 141.547 17.3868 141.26 16.7383 141.26C16.0977 141.26 15.6308 141.543 15.3378 142.109C15.0449 142.672 14.8984 143.576 14.8984 144.822ZM22.1758 145.83C22.3438 145.592 22.5996 145.279 22.9433 144.892L25.0175 142.695H26.1719L23.5704 145.431L26.3535 149.117H25.1758L22.9083 146.082L22.1758 146.715V149.117H21.2148V140H22.1758V144.834C22.1758 145.049 22.1602 145.381 22.129 145.83H22.1758Z" fill="#333333"/>
                    <path id="Vector_40" d="M12.6309 184.117H7V183.279L9.25586 181.012C9.94339 180.316 10.3965 179.82 10.6152 179.523C10.834 179.226 10.9981 178.937 11.1074 178.656C11.2168 178.375 11.2715 178.072 11.2715 177.748C11.2715 177.291 11.1328 176.929 10.8555 176.664C10.5781 176.394 10.1934 176.26 9.70117 176.26C9.3457 176.26 9.00781 176.318 8.6875 176.435C8.37109 176.553 8.01757 176.765 7.62695 177.074L7.11132 176.412C7.90039 175.756 8.75976 175.428 9.68945 175.428C10.4941 175.428 11.125 175.635 11.582 176.049C12.0391 176.459 12.2676 177.012 12.2676 177.707C12.2676 178.25 12.1152 178.787 11.8106 179.318C11.5059 179.849 10.9356 180.521 10.0996 181.334L8.22461 183.168V183.215H12.6309V184.117ZM19.5449 179.822C19.5449 181.303 19.3106 182.408 18.8418 183.138C18.377 183.869 17.6641 184.234 16.7031 184.234C15.7813 184.234 15.0801 183.861 14.5996 183.115C14.1191 182.365 13.8789 181.267 13.8789 179.822C13.8789 178.33 14.1113 177.222 14.5762 176.5C15.041 175.777 15.75 175.416 16.7031 175.416C17.6328 175.416 18.3379 175.793 18.8184 176.547C19.3027 177.301 19.5449 178.392 19.5449 179.822ZM14.8633 179.822C14.8633 181.068 15.0098 181.976 15.3027 182.547C15.5957 183.113 16.0625 183.396 16.7031 183.396C17.3516 183.396 17.8203 183.109 18.1094 182.535C18.4024 181.957 18.5488 181.053 18.5488 179.822C18.5488 178.592 18.4024 177.691 18.1094 177.121C17.8203 176.547 17.3516 176.26 16.7031 176.26C16.0625 176.26 15.5957 176.543 15.3027 177.109C15.0098 177.672 14.8633 178.576 14.8633 179.822ZM22.1406 180.83C22.3086 180.592 22.5645 180.279 22.9082 179.892L24.9824 177.695H26.1367L23.5352 180.431L26.3184 184.117H25.1406L22.8731 181.082L22.1406 181.715V184.117H21.1797V175H22.1406V179.834C22.1406 180.049 22.125 180.381 22.0938 180.83H22.1406Z" fill="#333333"/>
                    <path id="Vector_41" d="M10.0879 219.117H9.13867V213.012C9.13867 212.504 9.1543 212.023 9.18555 211.57C9.10352 211.652 9.01172 211.738 8.91016 211.828C8.80859 211.918 8.34375 212.299 7.51563 212.971L7 212.303L9.26758 210.551H10.0879V219.117ZM19.0293 214.822C19.0293 216.303 18.795 217.408 18.3262 218.138C17.8614 218.869 17.1485 219.234 16.1875 219.234C15.2657 219.234 14.5645 218.861 14.084 218.115C13.6035 217.365 13.3633 216.267 13.3633 214.822C13.3633 213.33 13.5957 212.222 14.0606 211.5C14.5254 210.777 15.2344 210.416 16.1875 210.416C17.1172 210.416 17.8223 210.793 18.3028 211.547C18.7871 212.301 19.0293 213.392 19.0293 214.822ZM14.3477 214.822C14.3477 216.068 14.4942 216.976 14.7871 217.547C15.0801 218.113 15.5469 218.396 16.1875 218.396C16.836 218.396 17.3047 218.109 17.5938 217.535C17.8868 216.957 18.0332 216.053 18.0332 214.822C18.0332 213.592 17.8868 212.691 17.5938 212.121C17.3047 211.547 16.836 211.26 16.1875 211.26C15.5469 211.26 15.0801 211.543 14.7871 212.109C14.4942 212.672 14.3477 213.576 14.3477 214.822ZM21.625 215.83C21.793 215.592 22.0489 215.279 22.3926 214.892L24.4668 212.695H25.6211L23.0196 215.431L25.8028 219.117H24.625L22.3575 216.082L21.625 216.715V219.117H20.6641V210H21.625V214.834C21.625 215.049 21.6094 215.381 21.5782 215.83H21.625Z" fill="#333333"/>
                    <path id="Vector_42" d="M16.4843 248.885C17.3867 248.885 18.0957 249.109 18.6113 249.558C19.1308 250.004 19.3906 250.615 19.3906 251.392C19.3906 252.279 19.1074 252.974 18.541 253.478C17.9785 253.982 17.2011 254.234 16.2089 254.234C15.2441 254.234 14.5078 254.08 14 253.771V252.834C14.2734 253.01 14.6132 253.148 15.0195 253.25C15.4257 253.347 15.8261 253.396 16.2207 253.396C16.9082 253.396 17.4414 253.234 17.8203 252.91C18.2031 252.586 18.3945 252.117 18.3945 251.504C18.3945 250.308 17.6621 249.711 16.1972 249.711C15.8261 249.711 15.33 249.767 14.7089 249.881L14.205 249.558L14.5273 245.551H18.7871V246.447H15.3593L15.1425 249.019C15.5918 248.929 16.039 248.885 16.4843 248.885ZM22.08 250.83C22.248 250.592 22.5039 250.279 22.8476 249.892L24.9218 247.695H26.0761L23.4746 250.431L26.2578 254.117H25.08L22.8125 251.082L22.08 251.715V254.117H21.1191V245H22.08V249.834C22.08 250.049 22.0644 250.381 22.0332 250.83H22.08Z" fill="#333333"/>
                    <path id="Vector_43" d="M19.3438 282.566C19.3438 283.113 19.1895 283.56 18.8809 283.908C18.5762 284.256 18.1426 284.488 17.5801 284.605V284.652C18.2676 284.738 18.7774 284.957 19.1094 285.308C19.4414 285.66 19.6075 286.121 19.6075 286.691C19.6075 287.508 19.3243 288.137 18.7579 288.578C18.1914 289.015 17.3868 289.234 16.3438 289.234C15.8907 289.234 15.4747 289.199 15.0957 289.129C14.7207 289.062 14.3555 288.943 14 288.771V287.846C14.3711 288.029 14.7657 288.17 15.1836 288.267C15.6055 288.361 16.004 288.408 16.379 288.408C17.8594 288.408 18.5997 287.828 18.5997 286.668C18.5997 285.629 17.7832 285.109 16.1504 285.109H15.3067V284.271H16.1622C16.8301 284.271 17.3594 284.125 17.75 283.832C18.1407 283.535 18.336 283.125 18.336 282.601C18.336 282.183 18.1914 281.855 17.9024 281.617C17.6172 281.379 17.2286 281.26 16.7364 281.26C16.3614 281.26 16.0079 281.31 15.6758 281.412C15.3438 281.513 14.9649 281.701 14.5391 281.974L14.0469 281.318C14.3985 281.041 14.8028 280.824 15.2598 280.668C15.7207 280.508 16.2051 280.428 16.7129 280.428C17.545 280.428 18.1914 280.619 18.6524 281.002C19.1133 281.381 19.3438 281.902 19.3438 282.566ZM22.3086 285.83C22.4766 285.592 22.7325 285.279 23.0762 284.892L25.1504 282.695H26.3047L23.7032 285.431L26.4864 289.117H25.3086L23.0411 286.082L22.3086 286.715V289.117H21.3477V280H22.3086V284.834C22.3086 285.049 22.293 285.381 22.2618 285.83H22.3086Z" fill="#333333"/>
                    <path id="Vector_44" d="M17.0879 324.117H16.1387V318.012C16.1387 317.504 16.1543 317.023 16.1856 316.57C16.1035 316.652 16.0117 316.738 15.9102 316.828C15.8086 316.918 15.3438 317.299 14.5156 317.971L14 317.303L16.2676 315.551H17.0879V324.117ZM21.7578 320.83C21.9258 320.592 22.1817 320.279 22.5254 319.892L24.5996 317.695H25.7539L23.1524 320.431L25.9356 324.117H24.7578L22.4903 321.082L21.7578 321.715V324.117H20.7969V315H21.7578V319.834C21.7578 320.049 21.7422 320.381 21.711 320.83H21.7578Z" fill="#333333"/>
                    <path id="Vector_45" d="M26.666 354.406C26.666 355.887 26.4316 356.992 25.9629 357.722C25.498 358.453 24.7851 358.818 23.8242 358.818C22.9023 358.818 22.2011 358.445 21.7207 357.699C21.2402 356.949 21 355.851 21 354.406C21 352.914 21.2324 351.806 21.6972 351.084C22.1621 350.361 22.8711 350 23.8242 350C24.7539 350 25.4589 350.377 25.9394 351.131C26.4238 351.885 26.666 352.976 26.666 354.406ZM21.9843 354.406C21.9843 355.652 22.1308 356.56 22.4238 357.131C22.7168 357.697 23.1836 357.98 23.8242 357.98C24.4726 357.98 24.9414 357.693 25.2304 357.119C25.5234 356.541 25.6699 355.637 25.6699 354.406C25.6699 353.176 25.5234 352.275 25.2304 351.705C24.9414 351.131 24.4726 350.844 23.8242 350.844C23.1836 350.844 22.7168 351.127 22.4238 351.693C22.1308 352.256 21.9843 353.16 21.9843 354.406Z" fill="#333333"/>
                    




                    {
                        objeto[0].data.map((x,index)=>{

                            // var circulo=[<circle cx="71" cy="52.5" r="9" stroke="#fff" stroke-width="3" fill="#3871E5" />,<circle cx="71" cy="297.5" r="9" stroke="#fff" stroke-width="3" fill="#E6282E" />]
                            var circulos=[]
                            var labelObjeto=x.nombre
                            var montos=[]
                            var rectangles=[]
                            
                            var offsetvar= index>10 ? 8 : index

                            var corxCantidad=(171+offsetvar*82).toString()
                            var corxRectangulo=(143+offsetvar*82).toString()
                            var corxContenedor=(129+offsetvar*82).toString()
                            var corxTexto=(195+offsetvar*82).toString()

                            for (let index2 = 0; index2 < objeto.length; index2++) {
                                // const element = objeto[index2];
                                // console.log(element)
                                if(objeto[index2].data.length>0){


                               
                                var cory=getCordenadasY(objeto[index2].data[index].total)
                                var corx= 71+index*82
                                var circuloUnidad= <circle cx={corx.toString()} cy={cory} r="9" stroke="#fff" stroke-width="3" fill={objeto[index2].color} />
                                var circuloCantidad= <g id="Group 72"><g id="Frame 1464">
                                                            <text  fill="#828282" xmlSpace="preserve"  font-family="Open Sans" font-size="12" letter-spacing="0px"><tspan x={corxCantidad} y={(116+index2*62).toString()}>{objeto[index2].label}</tspan></text>
                                                            <text  fill="#333333" xmlSpace="preserve" font-family="Open Sans" font-size="14" letter-spacing="0px"><tspan x={corxCantidad} y={(141+index2*62).toString()}>{objeto[index2].data[index].total} </tspan></text>
                                                        </g>
                                                    </g>
                                var rectanguloUnidad=<rect id="Rectangle 78" x={corxRectangulo} y={(111+index2*63).toString()} width="24" height="4" rx="2" fill={objeto[index2].color}/>

                                circulos.push(circuloUnidad)
                                montos.push(circuloCantidad)
                                rectangles.push(rectanguloUnidad)
                                }
                            }


                            return                     <g key={index} >
                            <g  className="linealGrafic--dots">
                                {circulos}
                            </g>
    
                            <a className="prueba">
                            <g  >
                                    <rect id="Rectangle 51" x={corxContenedor} y="74" width="160" height={objeto.length>2 ? "220" :"150"} rx="10" fill="white"/>
                                        <g id="Frame 1460">

                                            {montos}
                                        </g>
                                    <text id="2017" fill="#828282" xmlSpace="preserve"  font-family="Open Sans" font-size="12" letter-spacing="0px"><tspan x={corxTexto} y="92.6553">{labelObjeto}</tspan></text>
                                {rectangles}
                            </g>
                            </a>
                        </g>
                        })

                    }


                    <g id="labels">

                        {
                            objeto[0].data.map((x,index)=>{
                                    var posX=71 + index*82
                                return <text key={index} font-family="Open Sans" font-size="12" font-weight="normal" line-spacing="38" fill="#333333">
                                        <tspan x={posX} y="380">{x.year || x.month}</tspan>
                                        </text>

                            })
                        }

                    </g>
                    </g>
                    <defs>
                    <filter id="filter0_d" x="474" y="115" width="52" height="52" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                    <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
                    <feOffset dy="2"/>
                    <feGaussianBlur stdDeviation="7"/>
                    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>
                    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
                    <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
                    </filter>
                    <filter id="filter2_d" x="115" y="62" width="188" height="178" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                    <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
                    <feOffset dy="2"/>
                    <feGaussianBlur stdDeviation="7"/>
                    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>
                    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
                    <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
                    </filter>
                    <filter id="filter1_d" x="474" y="32" width="52" height="52" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                    <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
                    <feOffset dy="2"/>
                    <feGaussianBlur stdDeviation="7"/>
                    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>
                    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
                    <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
                    </filter>
                    <clipPath id="clipgl">
                    <rect width="1188" height="394" fill="white"/>
                    </clipPath>
                    </defs>
                </svg>

                </div>
        </div>
    )
}

export default Lineal
